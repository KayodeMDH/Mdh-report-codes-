library(Rnssp)
library(tidyverse)
library(janitor)
library(openxlsx)

#Replace USERNAME with your username.
# > Setup---------------------------------------------------------------------------------------------------------------
# TODO Add folder name to the end of gl_path below (i.e. USERNAME/<folder name here>)
gl_path <- "/opt/sas/shared/homes/USERNAME/Daily_Visit_HospitalCCDD"
Sys.setenv(RSTUDIO_PANDOC="/usr/lib/rstudio-server/bin/quarto/bin/tools")

setwd(gl_path)

load("~/myProfile.rda") 

end_date <- Sys.Date()
endDate <- format(end_date, "%d%b%y")
start_date <- end_date - 29
startDate <- format(start_date, "%d%b%y")

# > Pull up-to-date list of MN facilities and their regions-------------------------------------------------------------
# Credentials
decodeProfile <- function(profile){ 
  list(
    "username" = safer::decrypt_string(
      profile$.__enclos_env__$private$..username$value, 
      profile$.__enclos_env__$private$..__$value 
    ), 
    "password" = safer::decrypt_string(
      profile$.__enclos_env__$private$..password$value, 
      profile$.__enclos_env__$private$..__$value
    ) 
  ) 
}

dec <- decodeProfile(myProfile) 

con <- RODBC::odbcConnect(
  "BioSense_Platform",
  uid = paste0("biosense\\", dec$username),
  pwd = dec$password
)

site <- "MN"

MFT <- RODBC::sqlQuery(
  con,
  paste0(
    "SELECT *
                                   FROM ",
    site,
    "_MFT"
  )
)

mn_facilities <- MFT %>%
  clean_names() %>%
  filter(facility_status == "Active") %>%
  select(
    display_name = facility_display_name,
    facility_id = c_biosense_facility_id, 
    county = facility_county,
    region = essence_region
  ) %>%
  arrange(display_name)

RODBC::odbcClose(con)

facility_api_pulls <- mn_facilities %>%
  nest(data = -display_name) %>%
  mutate(
    api_data = map(.x = data, .f = function (.x) {
      
      url <- paste0("https://essence2.syndromicsurveillance.org/nssp_essence/api/timeSeries?geography=", unique(.x$facility_id), "&datasource=va_hosp&startDate=", startDate, "&medicalGroupingSystem=essencesyndromes&userId=2362&endDate=", endDate, "&percentParam=noPercent&aqtTarget=TimeSeries&geographySystem=hospital&detector=probrepswitch&timeResolution=daily&hasBeenE=1&stratVal=&multiStratVal=ccddCategory&graphOnly=true&numSeries=0&graphOptions=multipleSmall&seriesPerYear=false&nonZeroComposite=false&removeZeroSeries=true&startMonth=January&stratVal=&multiStratVal=ccddCategory&graphOnly=true&numSeries=0&graphOptions=multipleSmall&seriesPerYear=false&startMonth=January&nonZeroComposite=false")
      
      api_data <- myProfile$get_api_data(url) %>%
        pluck("timeSeriesData")
      
      if (class(api_data) == "list") {
        
        data.frame(
          date = NA,
          count = NA,
          expected = NA, 
          levels = NA,
          colorID = NA,
          color = NA,
          altText = NA, 
          details = NA,
          graphType = NA,
          lineLabel = NA,
          title = NA,
          ccddCategory_id = NA, 
          ccddCategory_display = NA
        )
        
      } else {
        
        api_data
        
      }
      
    })
  )

all_facilities <- sort(unique(facility_api_pulls$display_name))

hospital_ccdd <- facility_api_pulls %>%
  unnest(c(data, api_data)) %>%
  na.omit() %>%
  clean_names() %>%
  select(
    date,
    facility_name = display_name,
    facility_id,
    ccdd_category = ccdd_category_id, 
    count, 
    color
  ) %>%
  mutate(
    date = as.Date(date),
    alert = if_else(color %in% c("yellow", "red"), TRUE, FALSE)
  ) %>%
  filter(alert) %>%
  # Filter out specific categories "CDC All Drug v1" and "CDC All Drug v2"
  filter(!ccdd_category %in% c("CDC All Drug v1", "CDC All Drug v2", "CDC Alcohol v1
", "CDC All Drug Overdose v3 Parsed", "CDC Benzodiazepine Overdose v1", "CDC Benzodiazepine Overdose v2 Parsed",
"CDC Fentanyl Overdose v1", "CDC Fentanyl Overdose v2 Parsed", "CDC Methamphetamine Overdose v1 Parsed",
"CDC Alcohol v1",
"CDC Opioid Overdose v1",
"CDC Opioid Overdose v2",
"CDC Opioid Overdose v3",
"CDC Opioid Overdose v4 Parsed", 
"CDC Stimulant Overdose v4 Parsed",
"CDC Stimulants v1",
"CDC Stimulants v2",
"CDC Stimulants v3",
"Marijuana v1",
"Marijuana v2",
"All Traffic Related v1",
"CDC Acute Hepatitis C v1",
"CDC AFM Broad v1-Limit to Pediatric",
"CDC AFM Narrow v1-Limit to Pediatric",
"CDC Anxiety Disorders (without F419) v1",
"CDC Attention-Deficit Hyperactivity Disorders v1",
"CDC Bipolar Disorders v1",
"CDC Chicken Pox v1",
"CDC Chronic Hepatitis C v1",
"CDC Depressive Disorders v1",
"CDC Diabetic Ketoacidosis v1",
"CDC Dialysis v1",
"CDC Disruptive Behavioral and Impulse-Control v1",
"CDC Eating Disorders v1",
"CDC Falls 65 and Older v1",
"CDC Firearm Injury V1",
"CDC Hand Foot and Mouth v1",
"CDC Hip Fracture 65 and Older v1",
"CDC Medication Refill v1", "CDC Vaccine-Associated Adverse Events v1",
"CDC Mental Health v1", "CDC Seizure or Epilepsy v1", "CDC Suicide Attempt v1",
"CDC Motor Vehicle Crash Occupant Injury v1", "CDC Suspected Child Abuse and Neglect v1", "CDC Tic Disorders v1",
"CDC Myocarditis with No Specified Pathogen v1", "CDC Obsessive-Compulsive Disorders v1",
"CDC Pregnancy and Pregnancy Loss and Delivery v1", "CDC Schizophrenia Spectrum Disorders v1",
"Change in Taste or Smell v1", "Fever and Cough-Sob-DiffBr neg Influenza DD v1", "Fever and Cough-Sob-DiffBr neg Influenza DD v2", 
"Fever and Cough-Sob-DiffBr v1", "Fever and Cough-Sob-DiffBr v2", "Foreign Travel", "Heat Related Illness v1",
"ILI CCDD Neg Coronavirus DD v1", "ILI Neg Influenza Mention v1", "ILI Syndrome Neg Coronavirus DD v1", "Malaria v1",
"SDC Disaster Related Mental Health v1", "Sexual Violence v1", "Sexual Violence v2", "CDC Cocaine Overdose v2 Parsed",
"CDC Heroin Overdose v1", "CDC Heroin Overdose v2", "CDC Heroin Overdose v3", "CDC Heroin Overdose v4", "CDC Heroin Overdose v5 Parsed",
"Marijuana v3", "Foreign Travel v2"
))

alert_summary1 <- facility_api_pulls %>%
  unnest(c(data, api_data)) %>%
  na.omit() %>%
  clean_names() %>%
  select(
    date,
    facility_name = display_name,
    facility_id,
    ccdd_category = ccdd_category_id, 
    count, 
    color
  ) %>%
  mutate(
    date = as.Date(date),
    alert = if_else(color %in% c("yellow", "red"), TRUE, FALSE)
  ) %>%
  arrange(facility_id, ccdd_category, date) %>%
  group_by(facility_id, ccdd_category, grp = with(rle(alert), rep(seq_along(lengths), lengths))) %>%
  mutate(
    period_total = max(seq_along(grp)), 
    counter = seq_along(grp),
    start_date = min(date)
  ) %>%
  ungroup() %>%
  mutate(
    period_total = if_else(!alert, NA, period_total),
    counter = if_else(!alert, NA, counter),
    start_date = if_else(!alert, NA, start_date)
  ) %>%
  select(
    facility_name,
    facility_id,
    ccdd_category,
    grp,
    period_total,
    start_date
  ) %>%
  distinct() %>%
  filter(!is.na(start_date)) %>%
  group_by(facility_id) %>%
  mutate(
    alerting_categories = n_distinct(ccdd_category), 
    n_seq_alerts = sum(period_total > 1), 
    longest_seq = max(period_total)
  ) 

alert_summary2 <- alert_summary1 %>%
  filter(period_total > 1) %>%
  filter(start_date == max(start_date)) %>%
  ungroup() %>%
  select(
    facility_name,
    facility_id,
    most_recent_seq = start_date
  ) %>%
  distinct()

alert_summary3 <- facility_api_pulls %>%
  unnest(c(data, api_data)) %>%
  na.omit() %>%
  clean_names() %>%
  select(
    date,
    facility_name = display_name,
    facility_id,
    ccdd_category = ccdd_category_id, 
    count, 
    color
  ) %>%
  mutate(
    date = as.Date(date),
    alert = if_else(color %in% c("yellow", "red"), TRUE, FALSE)
  ) %>%
  filter(date >= max(date) - 6) %>%
  filter(alert) %>%
  group_by(facility_name, facility_id) %>%
  mutate(
    recent_alert_flag = case_when(
      all(color == "yellow") ~ "yellow", 
      TRUE ~ "red"
    )
  ) %>%
  ungroup() %>%
  distinct(facility_name, facility_id, recent_alert_flag)

alert_summary <- alert_summary1 %>%
  ungroup() %>%
  left_join(alert_summary2, by = c("facility_name", "facility_id")) %>%
  distinct(facility_name, facility_id, alerting_categories, n_seq_alerts, longest_seq, most_recent_seq) %>%
  left_join(alert_summary3, by = c("facility_name", "facility_id")) %>%
  select(-facility_id)

# Data details pull-----------------------------------------------------------------------------------------------------
total_api_pulls <- hospital_ccdd %>%
  distinct(ccdd_category, date) %>%
  nrow()

alerts_data_details <- hospital_ccdd %>%
  mutate(
    api_date = format(date, "%d%b%Y"),
    ccdd_name = tolower(ccdd_category),
    ccdd_name = gsub(" ", "%20", ccdd_name)
  ) %>%
  arrange(date, ccdd_category) %>%
  group_by(date, ccdd_category) %>%
  mutate(pull_id = cur_group_id()) %>%
  ungroup() %>%
  nest(data = -c(date, ccdd_category)) %>%
  mutate(
    data_pull = map(.x = data, function (.x) {
      
      pct_complete <- scales::percent(unique(.x$pull_id) / total_api_pulls, accuracy = 0.01)
      
      cat("API pull", unique(.x$pull_id), "out of", total_api_pulls, ": ", pct_complete, " complete...")
      
      facilities <- .x$facility_id %>%
        paste0(., collapse = "&geography=") %>%
        paste0("&geography=", .)
      
      start_end_date <- unique(.x$api_date)
      
      fields <- c(
        "Date",
        "Age",
        "Sex",
        "Patient_City",
        "Patient_Zip",
        "Admit_Reason_Combo",
        "CCDD",
        "CCDDCategory_flat",
        "HospitalName",
        "HospitalRegion", 
        "DeathDateTime", 
        "DeathIndicator",
        "State",
        "Region"
      ) %>%
        paste0(., collapse = "&field=") %>%
        paste0("&field=", .)
      
      url_dd <- paste0("https://essence2.syndromicsurveillance.org/nssp_essence/api/dataDetails?endDate=", start_end_date, facilities, "&percentParam=noPercent&datasource=va_hosp&startDate=", start_end_date, "&medicalGroupingSystem=essencesyndromes&userId=5129&aqtTarget=DataDetails&ccddCategory=", unique(.x$ccdd_name), "&geographySystem=hospital&detector=nodetectordetector&timeResolution=daily&hasBeenE=1", fields)
      
      myProfile$get_api_data(url_dd) %>%
        pluck("dataDetails")
      
      
    })
  ) %>%
  select(-date) %>%
  unnest(data_pull) %>%
  unnest(data) %>%
  filter(facility_name == HospitalName) %>%
  select(
    -facility_name,
    -api_date, 
    -pull_id
  ) %>%
  relocate(c(HospitalName, facility_id, State, Region))

# Build Excel workbook ---------------------------------------------------------
wb <- createWorkbook()

columnstyle <- createStyle(fontName = "Arial", fontSize = 10, halign = "center", valign = "center", textDecoration = "bold", wrapText = TRUE, border = "TopBottomLeftRight", borderStyle = "thin", borderColour = "black", fontColour = "white", fgFill = "#203764")

tablestyle <- createStyle(fontName = "Arial", fontSize = 10, halign = "left", valign = "bottom", textDecoration = "bold", fontColour = "#203764")

cellstyle <- createStyle(fontName = "Arial", fontSize = 10, border = "TopBottomLeftRight", borderStyle = "thin", borderColour = "black")

workbook_data <- alerts_data_details %>%
  mutate(Date = as.Date(Date, "%m/%d/%Y")) %>%
  arrange(HospitalName, ccdd_category, Date) %>%
  rename(Facility_Name = HospitalName) %>%
  group_split(Facility_Name, HospitalRegion, ccdd_category) %>%
  map_df(~.x %>% group_by(Date, count) %>% mutate(alert_id = cur_group_id())) %>%
  ungroup() %>%
  relocate(alert_id, .after = alert)

state_summary <- workbook_data %>%
  clean_names() %>%
  mutate(alert_id = paste0(facility_id, "_", alert_id)) %>%
  group_by(ccdd_category) %>%
  summarise(
    n_visits = n(),
    n_alerts = n_distinct(alert_id),
    recent_date = max(date)
  ) %>%
  ungroup() %>%
  mutate(va_ratio = n_visits / n_alerts) %>%
  mutate(va_ratio = round(va_ratio, 2)) %>%
  rename(
    `CCDD Category` = ccdd_category,
    `N Visits` = n_visits,
    `N Alerts` = n_alerts,
    `Visits to Alerts Ratio` = va_ratio,
    `Most Recent Alert` = recent_date
  )

ccdd_summary <- workbook_data %>%
  clean_names() %>%
  group_by(facility_name, ccdd_category) %>%
  summarise(
    n_visits = n(),
    n_alerts = n_distinct(alert_id),
    recent_date = max(date)
  ) %>%
  ungroup() %>%
  mutate(va_ratio = n_visits / n_alerts) %>%
  mutate(va_ratio = round(va_ratio, 2)) %>%
  rename(
    `Facility Name` = facility_name,
    `CCDD Category` = ccdd_category,
    `N Visits` = n_visits,
    `N Alerts` = n_alerts,
    `Visits to Alerts Ratio` = va_ratio,
    `Most Recent Alert` = recent_date
  )

facility_summary <- workbook_data %>%
  mutate(Facility_Name = factor(Facility_Name, levels = all_facilities)) %>%
  group_by(facility_id) %>%
  mutate(
    date_last_alert = max(Date),
    n_visits = n()
  ) %>%
  group_by(Facility_Name, HospitalRegion, ccdd_category, date_last_alert, n_visits) %>%
  summarise(n_alerts = max(alert_id)) %>%
  group_by(Facility_Name, HospitalRegion, date_last_alert, n_visits) %>%
  summarise(n_alerts = sum(n_alerts)) %>%
  ungroup() %>%
  complete(Facility_Name, fill = list(n_alerts = 0, date_last_alert = NA, n_visits = 0)) %>%
  mutate(
    week_date = end_date - 6, 
    recent_alert = if_else(date_last_alert >= week_date, TRUE, FALSE), 
    recent_alert = if_else(is.na(recent_alert), FALSE, recent_alert)
  ) %>%
  select(-week_date) %>%
  arrange(Facility_Name) %>%
  left_join(mn_facilities, by = c("Facility_Name" = "display_name")) %>%
  mutate(HospitalRegion = region) %>%
  select(
    -county,
    -region
  ) %>%
  left_join(alert_summary, by = c("Facility_Name" = "facility_name")) %>%
  select(-facility_id) %>%
  mutate(
    n_seq_alerts = if_else(is.na(n_seq_alerts), 0, n_seq_alerts), 
    longest_seq = if_else(longest_seq == 1, NA, longest_seq)
  ) %>%
  relocate(recent_alert_flag, .after = recent_alert) %>%
  mutate(
    recent_alert_flag = case_when(
      recent_alert_flag == "yellow" ~ "Warning",
      recent_alert_flag == "red" ~ "Alert",
      TRUE ~ "None"
    )
  )

facility_crosswalk <- data.frame(
  facility = all_facilities
) %>%
  mutate(
    tab_name = substr(str_squish(gsub("Hospital|Medical|Center|MN-", "", facility)), 1, 31),
    tab_name = gsub("'", "", tab_name)
  )

addWorksheet(wb, "Introduction", tabColour = "#203764", zoom = 85)

titleStyle <- createStyle(fontName = "Arial", fontSize = 10, fontColour = "white", halign = "left", valign = "top", border = "TopBottomLeftRight", borderStyle = "thin", borderColour = "#203764", fgFill = "#203764", textDecoration = "bold", wrapText = TRUE)

# Set title header of introduction tab
setColWidths(wb, sheet = 1, cols = 1, widths = 50)
setColWidths(wb, sheet = 1, cols = 2, widths = 40)
setColWidths(wb, sheet = 1, cols = 3, widths = 12)
setColWidths(wb, sheet = 1, cols = 4, widths = 10)
setColWidths(wb, sheet = 1, cols = 5, widths = 10)
setColWidths(wb, sheet = 1, cols = 6:10, widths = 18)
setRowHeights(wb, sheet = 1, rows = 1, heights = 45)

mergeCells(wb, sheet = 1, cols = 1:10, rows = 1)

addStyle(wb, sheet = 1, titleStyle, rows = 1, cols = 1:10)

wb_title <- paste0("Minnesota Facility CCDD Category Alerting\nReport generated on: ", format(Sys.Date(), "%B %d, %Y"))

writeData(wb, sheet = 1, wb_title, startRow = 1)

# Description header
mergeCells(wb, sheet = 1, cols = 1:10, rows = 3)
addStyle(wb, sheet = 1, titleStyle, rows = 3, cols = 1:10)

writeData(wb, sheet = 1, "Description", startRow = 3)

# Description text
textStyle <- createStyle(fontName = "Arial", fontSize = 10, halign = "left", valign = "top", border = "TopBottomLeftRight", borderStyle = "thin", borderColour = "#203764", wrapText = TRUE)

textStyle2 <- createStyle(fontName = "Arial", fontSize = 10, halign = "left", valign = "bottom", wrapText = TRUE)

mergeCells(wb, sheet = 1, cols = 1:10, rows = 4)
setRowHeights(wb, sheet = 1, rows = 4, heights = 168)

addStyle(wb, sheet = 1, textStyle, rows = 4, cols = 1:10)

description <- paste0("This report includes line-level data details for NSSP-ESSENCE emergency department encounters identified by CCDD categories that are associated with temporal alerts signaled by the default ESSENCE EWMA/Regression switch algorithm. The subset of data details fields included in this report are HospitalName, HospitalID, State, Region, Date, Age, Sex, Patient_City, Patient_Zip, Admit_Reason_Combo, CCDD, CCDDCategory_Flat, DeathDateTime, and DeathIndicator. Records associated with alerts over the most recent 30 days are organized by facility tab. This report includes data from ", format(start_date, "%B %d, %Y"), " to ", format(end_date, "%B %d, %Y"), "\n\n", "Tabs for all Minnesota emergency department facilities are included in this report. Tabs colored red represent facilities with at least one record associated with an alert occurring over the last 30 days. Grey tabs represent facilities with no alerts in the last 30 days and do not contain any data.", "\n\n", "N Alerts: Total number of alerts for each facility over the last 30 days", "\n", "N Visits: Total number of encounters (records) associated with alerts", "\n", "Recent Alert: Values indicate whether an alert or warning occurred over the last 7 days", "\n", "Sequences of Consecutive Alerts: Number of sequences of alerts occurring over at least 2 consecutive days", "\n", "Longest Sequence: For all sequences of consecutive alerts occurring over 2 or more days, the longest sequence of consecutive alerts", "\n", "Most Recent Sequence: Start date for the most recent sequence of consecutive alerts occurring over 2 or more days")

writeData(wb, sheet = 1, description, startRow = 4)

# Facility crosswalk
addStyle(wb, sheet = 1, titleStyle, rows = 5, cols = 1:10)

addStyle(wb, sheet = 1, cellstyle, rows = 6:(nrow(facility_crosswalk) + 5), cols = 1:10, gridExpand = TRUE)

for (j in 1:nrow(facility_crosswalk)) {
  
  writeFormula(
    wb, 
    sheet = 1, 
    startRow = j + 5, 
    x = 
      makeHyperlinkString(
        row = 1,
        col = 1,
        text = facility_crosswalk$facility[j],
        sheet = facility_crosswalk$tab_name[j]
      )
  )
  
}

summary_limited <- facility_summary %>%
  select(-Facility_Name) %>%
  mutate(recent_alert = recent_alert_flag) %>%
  select(-recent_alert_flag) %>%
  rename(
    `Hospital Region` = HospitalRegion,
    `N Alerts` = n_alerts,
    `Date of Last Alert` = date_last_alert, 
    `N Visits` = n_visits, 
    `Recent Alert` = recent_alert,
    `Alerting CCDD Categories` = alerting_categories, 
    `Sequences of Consecutive Alerts` = n_seq_alerts,
    `Longest Sequence` = longest_seq,
    `Most Recent Sequence` = most_recent_seq
  )

writeData(wb, sheet = 1, "Facility", startRow = 5, startCol = 1)
writeData(wb, sheet = 1, summary_limited, startRow = 5, startCol = 2)

conditionalFormatting(
  wb,
  sheet = 1,
  cols = 6, 
  rows = 6:(nrow(facility_crosswalk) + 5),
  rule = "Alert",
  style = createStyle(bgFill = "#A50026", fontColour = "white", textDecoration = "bold"),
  type = "contains"
)

conditionalFormatting(
  wb,
  sheet = 1,
  cols = 6,
  rows = 6:(nrow(facility_crosswalk) + 5),
  rule = "Warning", 
  style = createStyle(bgFill = "#FDD081", fontColour = "black", textDecoration = "bold"),
  type = "contains"
)

insertImage(wb, sheet = 1, file = "mdoh_logo.png", width = 5, height = 3, startRow = 2, startCol = 12)

showGridLines(wb, sheet = 1, showGridLines = FALSE)
freezePane(wb, sheet = 1, firstActiveRow = 2)

addWorksheet(wb, "State Summary", tabColour = "#203764", zoom = 85)
addStyle(wb, sheet = 2, columnstyle, row = 1, cols = 1:5, gridExpand = TRUE)
addStyle(wb, sheet = 2, cellstyle, rows = 2:(nrow(state_summary) + 1), cols = 1:5, gridExpand = TRUE)
writeData(wb, sheet = 2, state_summary, startRow = 1)

setColWidths(wb, sheet = 2, cols = 1, widths = 50)
setColWidths(wb, sheet = 2, cols = 2:3, widths = 14)
setColWidths(wb, sheet = 2, cols = 4:5, widths = 25)

addFilter(wb, sheet = 2, row = 1, cols = 1:5)

showGridLines(wb, sheet = 2, showGridLines = FALSE)
freezePane(wb, sheet = 2, firstActiveRow = 2)

facilities_with_alerts <- sort(unique(workbook_data$Facility_Name))

for (i in 1:length(all_facilities)) {
  
  
  if (!all_facilities[i] %in% facilities_with_alerts) {
    
    sheet_name <- gsub("'", "", substr(str_squish(gsub("Hospital|Medical|Center|MN-|", "", all_facilities[i])), 1, 31))
    
    addWorksheet(wb, sheet_name, tabColour = "#203764", zoom = 85)
    
    sheet_data <- workbook_data %>%
      filter(Facility_Name == all_facilities[i]) %>%
      select(-ccdd_name) %>%
      relocate(HospitalRegion, .after = State) %>%
      relocate(Region, .after = Sex) %>%
      mutate(color = ifelse(color == "yellow", "Warning", "Alert")) %>%
      rename(
        `Facility Name` = Facility_Name, 
        `Facility ID` = facility_id, 
        `Region` = HospitalRegion, 
        `CCDD Category` = ccdd_category, 
        `Count` = count, 
        `Alert` = alert, 
        `Alert Type` = color, 
        `Alert ID` = alert_id, 
        `Patient Region` = Region, 
        `Patient City` = Patient_City,
        `Patient ZIP` = Patient_Zip,
        `Admit Reason Combo` = Admit_Reason_Combo, 
        `CCDD Category Flat` = CCDDCategory_flat,
        `Death Date Time` = DeathDateTime,
        `Death Indicator` = DeathIndicator
      )
    
    summary_data <- ccdd_summary %>%
      filter(`Facility Name` == all_facilities[i]) %>%
      select(-`Facility Name`)
    
    addStyle(wb, sheet = i + 2, columnstyle, rows = 8, cols = 1:20)
    addStyle(wb, sheet = i + 2, cellstyle, row = 9, cols = 1:20, gridExpand = TRUE)
    # freezePane(wb, sheet = i + 2, firstActiveRow = 6)
    showGridLines(wb, sheet = i + 2, showGridLines = FALSE)
    setColWidths(wb, sheet = i + 2, cols = c(1, 5, 16), widths = 40)
    setColWidths(wb, sheet = i + 2, cols = c(3, 6, 9, 11, 12), widths = 7)
    setColWidths(wb, sheet = i + 2, cols = 7, widths = 12)
    setColWidths(wb, sheet = i + 2, cols = c(17, 18), widths = 25)
    
    writeData(wb, sheet = i + 2, sheet_data, startRow = 8)
    
    addStyle(wb, sheet = i + 2, tablestyle, row = 2, col = 1)
    addStyle(wb, sheet = i + 2, columnstyle, row = 3, cols = 1:5, gridExpand = TRUE)
    addStyle(wb, sheet = i + 2, cellstyle, row = 4, cols = 1:5, gridExpand = TRUE)
    writeData(wb, sheet = i + 2, "CCDD Category Summary", startRow = 2, startCol = 1)
    writeData(wb, sheet = i + 2, summary_data, startRow = 3)
    
    addStyle(wb, sheet = i + 2, tablestyle, row = 6, col = 1)
    writeData(wb, sheet = i + 2, "Title: Visit Details for Each CCDD Category Alert", startRow = 6, startCol = 1)
    
    addStyle(wb, sheet = i + 2, textStyle2, row = 7, col = 1)
    
    writeData(wb, sheet = i + 2, "Description: The table provides visit-level information for each CCDD Category alert from above. It contains a subset of information for each visit included in an alert. Use this table to futher understand patient and visit circumstances for each alert. Note: one visit may be included in multiple CCDD Categories and as such multiple alerts.", startRow = 7, startCol = 1)
    
    setRowHeights(wb, sheet = i + 2, rows = 7, heights = 110)
    
    writeFormula(
      wb, 
      sheet = i + 2, 
      startRow = 1, 
      x = 
        makeHyperlinkString(
          row = 1,
          col = 1,
          text = "Back to Home Tab", 
          sheet = "Introduction"
        )
    )
    
    
  } else {
    
    sheet_name <- gsub("'", "", substr(str_squish(gsub("Hospital|Medical|Center|MN-|", "", all_facilities[i])), 1, 31))
    
    addWorksheet(wb, sheet_name, tabColour = "#203764", zoom = 85)
    
    sheet_data <- workbook_data %>%
      filter(Facility_Name == all_facilities[i]) %>%
      select(-ccdd_name) %>%
      relocate(HospitalRegion, .after = State) %>%
      relocate(Region, .after = Sex) %>%
      mutate(color = ifelse(color == "yellow", "Warning", "Alert")) %>%
      rename(
        `Facility Name` = Facility_Name, 
        `Facility ID` = facility_id, 
        `Region` = HospitalRegion, 
        `CCDD Category` = ccdd_category, 
        `Count` = count, 
        `Alert` = alert, 
        `Alert Type` = color, 
        `Alert ID` = alert_id, 
        `Patient Region` = Region, 
        `Patient City` = Patient_City,
        `Patient ZIP` = Patient_Zip,
        `Admit Reason Combo` = Admit_Reason_Combo, 
        `CCDD Category Flat` = CCDDCategory_flat,
        `Death Date Time` = DeathDateTime,
        `Death Indicator` = DeathIndicator
      )
    
    summary_data <- ccdd_summary %>%
      filter(`Facility Name` == all_facilities[i]) %>%
      select(-`Facility Name`)
    
    addStyle(wb, sheet = i + 2, columnstyle, rows = 7 + nrow(summary_data), cols = 1:20)
    addStyle(wb, sheet = i + 2, cellstyle, row = (8 + nrow(summary_data)):(nrow(sheet_data) + 7 + nrow(summary_data)), cols = 1:20, gridExpand = TRUE)
    # freezePane(wb, sheet = i + 2, firstActiveRow = 5 + nrow(summary_data))
    showGridLines(wb, sheet = i + 2, showGridLines = FALSE)
    setColWidths(wb, sheet = i + 2, cols = c(1, 5, 16), widths = 40)
    setColWidths(wb, sheet = i + 2, cols = c(3, 6, 9, 11, 12), widths = 7)
    setColWidths(wb, sheet = i + 2, cols = 7, widths = 12)
    setColWidths(wb, sheet = i + 2, cols = c(17, 18), widths = 25)
    
    writeData(wb, sheet = i + 2, sheet_data, startRow = 7 + nrow(summary_data))
    
    addFilter(wb, sheet = i + 2, row = 7 + nrow(summary_data), cols = 1:ncol(sheet_data))
    
    addStyle(wb, sheet = i + 2, tablestyle, row = 2, col = 1)
    addStyle(wb, sheet = i + 2, columnstyle, row = 3, cols = 1:5, gridExpand = TRUE)
    addStyle(wb, sheet = i + 2, cellstyle, rows = 4:(nrow(summary_data) + 3), cols = 1:5, gridExpand = TRUE)
    writeData(wb, sheet = i + 2, "CCDD Category Summary", startRow = 2, startCol = 1)
    writeData(wb, sheet = i + 2, summary_data, startRow = 3)
    
    addStyle(wb, sheet = i + 2, tablestyle, row = nrow(summary_data) + 5, col = 1)
    writeData(wb, sheet = i + 2, "Title: Visit Details for Each CCDD Category Alert", startRow = nrow(summary_data) + 5, startCol = 1)
    
    addStyle(wb, sheet = i + 2, textStyle2, row = nrow(summary_data) + 6, col = 1)
    
    writeData(wb, sheet = i + 2, "Description: The table provides visit-level information for each CCDD Category alert from above. It contains a subset of information for each visit included in an alert. Use this table to futher understand patient and visit circumstances for each alert. Note: one visit may be included in multiple CCDD Categories and as such multiple alerts.", startRow = nrow(summary_data) + 6, startCol = 1)
    
    setRowHeights(wb, sheet = i + 2, rows =  nrow(summary_data) + 6, heights = 110)
    
    conditionalFormatting(
      wb,
      sheet = i + 2,
      cols = 7,
      rows = (8 + nrow(summary_data)):(nrow(sheet_data) + 7 + nrow(summary_data)),
      rule = "Alert", 
      style = createStyle(bgFill = "#A50026", fontColour = "white", textDecoration = "bold"),
      type = "contains"
    )
    
    conditionalFormatting(
      wb,
      sheet = i + 2,
      cols = 7,
      rows = (8 + nrow(summary_data)):(nrow(sheet_data) + 7 + nrow(summary_data)),
      rule = "Warning", 
      style = createStyle(bgFill = "#FDD081", fontColour = "black", textDecoration = "bold"),
      type = "contains"
    )
    
    writeFormula(
      wb, 
      sheet = i + 2, 
      startRow = 1,
      x = 
        makeHyperlinkString(
          row = 1,
          col = 1,
          text = "Back to Home Tab", 
          sheet = "Introduction"
        )
    )
    
    
  }
  
}

saveWorkbook(wb, "MN_Hospital_CCDD_Alerting_Report.xlsx", overwrite = TRUE)
